I"âÆ<h1 id="preface">Preface</h1>
<p>By the evolving of the API design, more and more developer are focus on the RESTFUL API style. But also more and more questions comes. How to do the versioning? How to design the response body to meet different requirement? especially when client wants different fields by one request. How to validating the parameter type and logic? How to fetching and caching the data?
So here comes the <strong>GrapqhQL</strong>, it‚Äôs let us have another choice to design the API beside the RESTFUL.</p>

<h1 id="what-is-graphql">What is GraphQL?</h1>
<p><img src="http://localhost:4000/images/graphql/logo.png" alt="GraphQL" /></p>

<p>Here is the introduction from GraphQL official web site.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GraphQL is a query language designed to build client applications by providing an intuitive and flexible syntax 
and system for describing their data requirements and interactions.

GraphQL is not a programming language capable of arbitrary computation, but is instead a language used to query 
application servers that have capabilities defined in this specification. GraphQL does not mandate a particular 
programming language or storage system for application servers that implement it. Instead, application servers take 
their capabilities and map them to a uniform language, type system, and philosophy that GraphQL encodes. 
This provides a unified interface friendly to product development and a powerful platform for tool‚Äêbuilding.
</code></pre></div></div>

<p>Compare to RESTFUL, GraphQL have 5 advantages</p>

<ul>
  <li>Easy to extend</li>
  <li>Query as documentation</li>
  <li>Fetch the data more centralized</li>
  <li>Strong type system</li>
  <li>No more versioning</li>
</ul>

<p>Let‚Äôs see what Github says~</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You may be wondering why we chose to start supporting GraphQL. Our API was designed to be RESTful and 
hypermedia-driven. We‚Äôre fortunate to have dozens of different open-source clients written in a plethora of 
languages.  Businesses grew around these endpoints.

Like most technology, REST is not perfect and has some drawbacks. Our ambition to change our API focused on solving 
two problems.

The first was scalability. The REST API is responsible for over 60% of the requests made to our database tier. This
is partly because, by its nature, hypermedia navigation requires a client to repeatedly communicate with a server 
so that it can get all the information it needs. Our responses were bloated and filled with all sorts of *_url hints 
in the JSON responses to help people continue to navigate through the API to get what they needed. Despite all the 
information we provided, we heard from integrators that our REST API also wasn‚Äôt very flexible. It sometimes required 
two or three separate calls to assemble a complete view of a resource. It seemed like our responses simultaneously 
sent too much data and didn‚Äôt include data that consumers needed.

As we began to audit our endpoints in preparation for an APIv4, we encountered our second problem. We wanted to 
collect some meta-information about our endpoints. For example, we wanted to identify the OAuth scopes required for 
each endpoint. We wanted to be smarter about how our resources were paginated. We wanted assurances of type-safety 
for user-supplied parameters. We wanted to generate documentation from our code. We wanted to generate clients 
instead of manually supplying patches to our Octokit suite. We studied a variety of API specifications built to 
make some of this easier, but we found that none of the standards totally matched our requirements.

And then we learned about GraphQL.
</code></pre></div></div>

<h1 id="getting-start">Getting start</h1>
<p>So let‚Äôs get familiar with it from a simple example</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
    <span class="nl">hello</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre></div></div>
<p>This is a <code class="language-plaintext highlighter-rouge">schema</code> definition for the query. We define a root type named <code class="language-plaintext highlighter-rouge">Query</code>, and from this type we can get <code class="language-plaintext highlighter-rouge">hello</code> field, which is in the type of <code class="language-plaintext highlighter-rouge">String</code></p>

<p>Then assume that we build a GraphQL server and make it running already. Now we can send a query to retrieve the value for <code class="language-plaintext highlighter-rouge">hello</code>.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">query</span> <span class="nx">Query</span> <span class="p">{</span>
  <span class="nx">hello</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Let‚Äôs see what we get.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="nx">hello</span><span class="o">=</span><span class="nx">world</span><span class="p">}</span>
</code></pre></div></div>
<p>So here we should know some main concepts of GraphQL</p>

<h5 id="operation">Operation</h5>
<p>GraphQL have two operations, <code class="language-plaintext highlighter-rouge">query</code> &amp; <code class="language-plaintext highlighter-rouge">mutation</code>. For example, the schema design could be:</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Mutation</span> <span class="p">{</span>
  <span class="nx">setMessage</span><span class="p">(</span><span class="nx">message</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span> <span class="nb">String</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
  <span class="nl">getMessage</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="schema">Schema</h4>
<p>Schema is the query definitions of the GraphQL, it‚Äôs contain the subtypes, fields, interfaces, input objects, enum defines‚Ä¶ for example</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
    <span class="nl">patent_biblio</span><span class="p">:</span> <span class="nx">PatentBiblio</span>
    <span class="nx">legal</span><span class="p">:</span> <span class="nx">Legal</span>
    <span class="nx">patent_biblio_legal</span><span class="p">:</span> <span class="nx">PatentBiblioAndLegal</span>

<span class="p">}</span>

<span class="kr">interface</span> <span class="nx">Patent</span> <span class="p">{</span>
    <span class="nx">id</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">pn</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">PatentBiblio</span> <span class="kr">implements</span> <span class="nx">Patent</span><span class="p">{</span>
    <span class="nx">id</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">pn</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">apno</span><span class="p">:</span> <span class="nb">String</span>
    <span class="nx">ans</span><span class="p">:</span> <span class="nx">Assignee</span>
    <span class="nx">familyType</span><span class="p">:</span> <span class="nx">FamilyType</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Assignee</span> <span class="kr">implements</span> <span class="nx">Person</span><span class="p">{</span>
    <span class="nl">name</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">lang</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>

<span class="kr">interface</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="nl">name</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Legal</span> <span class="p">{</span>
    <span class="nl">legalStatus</span><span class="p">:[</span><span class="nb">String</span><span class="p">]</span>
    <span class="nx">eventStatus</span><span class="p">:[</span><span class="nb">String</span><span class="p">]</span>
    <span class="nx">l001ep</span><span class="p">:</span><span class="nb">String</span>
<span class="p">}</span>

<span class="nx">union</span> <span class="nx">PatentBiblioAndLegal</span> <span class="o">=</span> <span class="nx">PatentBiblio</span> <span class="o">|</span> <span class="nx">Legal</span>

<span class="kr">enum</span> <span class="nx">FamilyType</span> <span class="p">{</span>
    <span class="nx">ORIGINAL</span>
    <span class="nx">INPADOC</span>
<span class="p">}</span>
</code></pre></div></div>
<p>This schema define a <code class="language-plaintext highlighter-rouge">Query</code> type that could let client fetch <code class="language-plaintext highlighter-rouge">PatentBiblio</code> and <code class="language-plaintext highlighter-rouge">Legal</code>. The <code class="language-plaintext highlighter-rouge">PatentBiblio</code> implements the <code class="language-plaintext highlighter-rouge">Patent</code> interface, and also <code class="language-plaintext highlighter-rouge">PatentBiblio</code> contains <code class="language-plaintext highlighter-rouge">Assignee</code> type which implements the <code class="language-plaintext highlighter-rouge">Person</code> type. The <code class="language-plaintext highlighter-rouge">familyType</code> in PatentBiblio will return the enum type named <code class="language-plaintext highlighter-rouge">FamilyType</code>.</p>

<p>The structure is like below: 
<img src="http://localhost:4000/images/graphql/GraphQL_Schema_Demo.png" alt="GraphQL Schema Demo" /></p>
<h5 id="field">Field</h5>
<p>In the example below, <code class="language-plaintext highlighter-rouge">pn</code> is a field of <code class="language-plaintext highlighter-rouge">Patent</code>, and it‚Äôs type is <code class="language-plaintext highlighter-rouge">String</code>.</p>
<h5 id="argument">Argument</h5>
<p>In the example below, <code class="language-plaintext highlighter-rouge">patentId</code> is a argument of <code class="language-plaintext highlighter-rouge">id</code> field in <code class="language-plaintext highlighter-rouge">PatentBiblio</code>, and it‚Äôs type is <code class="language-plaintext highlighter-rouge">String</code>.</p>
<h5 id="main-types-of-the-graphql">Main Types of the GraphQL</h5>
<ul>
  <li>Scalar
    <ul>
      <li>Int</li>
      <li>Float</li>
      <li>String</li>
      <li>Boolean</li>
    </ul>
  </li>
  <li>Object</li>
  <li>Interface</li>
  <li>Inpit Object</li>
  <li>Enum</li>
  <li>List</li>
</ul>

<p>As we know, GraphQL is based on strong type validating, so we must be very clear about what kinds of type we want to define.
For example, in the example below, we can see that:<br />
<code class="language-plaintext highlighter-rouge">patent_biblio</code> is related to Object <code class="language-plaintext highlighter-rouge">PatentBiblio</code><br />
<code class="language-plaintext highlighter-rouge">legalStatus</code> in <code class="language-plaintext highlighter-rouge">Legal</code> is the <code class="language-plaintext highlighter-rouge">List</code> type, the format could be <code class="language-plaintext highlighter-rouge">[List]</code>
<code class="language-plaintext highlighter-rouge">familyType</code> in <code class="language-plaintext highlighter-rouge">PatentBiblio</code> related to <code class="language-plaintext highlighter-rouge">Enum</code> type <code class="language-plaintext highlighter-rouge">FamilyType</code></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">schema</span> <span class="p">{</span>
    <span class="nl">query</span><span class="p">:</span> <span class="nx">LitigationQuery</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">LitigationQuery</span> <span class="p">{</span>
    <span class="nl">litigation</span><span class="p">:</span> <span class="nx">Litigation</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Litigation</span> <span class="p">{</span>
    <span class="nx">defendant</span><span class="p">(</span><span class="nx">queryInput</span><span class="p">:</span> <span class="nx">LitigationQueryInput</span><span class="p">):</span> <span class="nb">String</span>
    <span class="nx">plaintiff</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>

<span class="nx">input</span> <span class="nx">LitigationQueryInput</span> <span class="p">{</span>
    <span class="nl">patentId</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre></div></div>
<p>In this example, we make the argument in field <code class="language-plaintext highlighter-rouge">defendant</code> to be the <code class="language-plaintext highlighter-rouge">Input Object</code> type named<code class="language-plaintext highlighter-rouge">LitigationQueryInput</code>.</p>
<h5 id="fragment">Fragment</h5>
<p>In order to reduce the duplicate text in the query string, GraphQL allow for the reuse of the repeated selections of the fields, for example:</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">query</span> <span class="nx">Query</span><span class="p">(</span><span class="nx">$patentId</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span><span class="p">,</span> <span class="nx">$offset</span><span class="p">:</span> <span class="nx">Int</span><span class="p">,</span> <span class="nx">$limit</span><span class="p">:</span> <span class="nx">Int</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">patent</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nx">$patentId</span><span class="p">,</span> <span class="nx">offset</span><span class="p">:</span> <span class="nx">$offset</span><span class="p">,</span> <span class="nx">limit</span><span class="p">:</span> <span class="nx">$limit</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">id</span>
    <span class="nx">pn</span>
    <span class="nx">my_name</span>
    <span class="nx">person</span> <span class="p">{</span>
      <span class="nx">name</span>
    <span class="p">}</span>
    <span class="nx">citations</span> <span class="p">{</span>
      <span class="p">...</span><span class="nx">citationPatent</span>
      <span class="nx">citations</span> <span class="p">{</span>
        <span class="p">...</span><span class="nx">citationPatent</span>
        <span class="nx">citations</span> <span class="p">{</span>
          <span class="p">...</span><span class="nx">citationPatent</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nx">total</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nx">$patentId</span><span class="p">)</span>
  <span class="nx">offset</span><span class="p">(</span><span class="nx">offset</span><span class="p">:</span> <span class="nx">$offset</span><span class="p">,</span> <span class="nx">limit</span><span class="p">:</span> <span class="nx">$limit</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">fragment</span> <span class="nx">citationPatent</span> <span class="nx">on</span> <span class="nx">Patent</span> <span class="p">{</span>
  <span class="nx">id</span>
  <span class="nx">pn</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="graphql-for-java">GraphQL for Java</h1>
<p>GraphQL library support many languages, such as</p>

<ul>
  <li>C# / .NET</li>
  <li>Clojure</li>
  <li>Elixir</li>
  <li>Erlang</li>
  <li>Go</li>
  <li>Groovy</li>
  <li>Java</li>
  <li>JavaScript</li>
  <li>PHP</li>
  <li>Python</li>
  <li>Scala</li>
  <li>Ruby</li>
</ul>

<p>Before we start to introduce the GraphQL for Java, let‚Äôs think about some questions first.</p>

<ul>
  <li>How we define the schema?</li>
  <li>How we fetch the data?</li>
  <li>How to send query?</li>
  <li>How to validating the query?</li>
  <li>How to serialized the response?</li>
  <li>How to catch the exception?</li>
  <li>How to do the logging?</li>
  <li>How to do the pagination?</li>
  <li>How to serve vai HTTP/HTTPS?</li>
</ul>

<p>So let‚Äôs begin from an Hello World again!
Create a maven architecture project first, add the dependency for GraphQL</p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span>
         <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
         <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>com.chris.graphql<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>project-graphql<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
    <span class="nt">&lt;version&gt;</span>1.0-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;name&gt;</span>project-graphql Maven Webapp<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;url&gt;</span>http://maven.apache.org<span class="nt">&lt;/url&gt;</span>
    <span class="nt">&lt;properties&gt;</span>
        <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
        <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>
    <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.8.1<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphql-java<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>6.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-annotations<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>
    <span class="nt">&lt;build&gt;</span>
        <span class="nt">&lt;finalName&gt;</span>project-graphql<span class="nt">&lt;/finalName&gt;</span>
        <span class="nt">&lt;plugins&gt;</span>
            <span class="nt">&lt;plugin&gt;</span>
                <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
                <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
                <span class="nt">&lt;version&gt;</span>3.5<span class="nt">&lt;/version&gt;</span>
                <span class="nt">&lt;configuration&gt;</span>
                    <span class="nt">&lt;source&gt;</span>${java.version}<span class="nt">&lt;/source&gt;</span>
                    <span class="nt">&lt;target&gt;</span>${java.version}<span class="nt">&lt;/target&gt;</span>
                    <span class="nt">&lt;encoding&gt;</span>${project.build.sourceEncoding}<span class="nt">&lt;/encoding&gt;</span>
                    <span class="nt">&lt;optimize&gt;</span>true<span class="nt">&lt;/optimize&gt;</span>
                    <span class="nt">&lt;showWarnings&gt;</span>true<span class="nt">&lt;/showWarnings&gt;</span>
                <span class="nt">&lt;/configuration&gt;</span>
            <span class="nt">&lt;/plugin&gt;</span>
        <span class="nt">&lt;/plugins&gt;</span>

        <span class="nt">&lt;resources&gt;</span>
            <span class="nt">&lt;resource&gt;</span>
                <span class="nt">&lt;directory&gt;</span>src/main/resources<span class="nt">&lt;/directory&gt;</span>
                <span class="nt">&lt;includes&gt;</span>
                    <span class="nt">&lt;include&gt;</span>**/*<span class="nt">&lt;/include&gt;</span>
                <span class="nt">&lt;/includes&gt;</span>
                <span class="nt">&lt;filtering&gt;</span>false<span class="nt">&lt;/filtering&gt;</span>
            <span class="nt">&lt;/resource&gt;</span>
        <span class="nt">&lt;/resources&gt;</span>

    <span class="nt">&lt;/build&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>
<p>Because the GraphQL-Java based on Java 8, so we also make the project compile in JDK 1.8, then let‚Äôs create a class named <code class="language-plaintext highlighter-rouge">HelloWorld</code></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.Scalars</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLFieldDefinition</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLObjectType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>

<span class="cm">/**
 * com.chris.graphql.HelloWorld
 * &lt;p&gt;
 * Author: ChrisYe
 * Date: 11/28/2017
 */</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//  Programmatically</span>
        <span class="nc">GraphQLObjectType</span> <span class="n">queryType</span> <span class="o">=</span> <span class="nc">GraphQLObjectType</span><span class="o">.</span><span class="na">newObject</span><span class="o">()</span>
                <span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="nc">GraphQLFieldDefinition</span><span class="o">.</span><span class="na">newFieldDefinition</span><span class="o">()</span>
                        <span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"hello"</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">Scalars</span><span class="o">.</span><span class="na">GraphQLString</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="s">"world"</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">//Query by</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="nc">GraphQLSchema</span><span class="o">.</span><span class="na">newSchema</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryType</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">GraphQL</span> <span class="n">build</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">build</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="s">"query Query {hello}"</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">executionResult</span><span class="o">.</span><span class="na">getData</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>
<p>Run the main method, and get the result:</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="nx">hello</span><span class="o">=</span><span class="nx">world</span><span class="p">}</span>
</code></pre></div></div>
<p>OK, that‚Äôs it. In this example, we define the schema programmatically.<br />
First we define a <code class="language-plaintext highlighter-rouge">GraphQLObjectType</code>, which named <code class="language-plaintext highlighter-rouge">Query</code> and have field <code class="language-plaintext highlighter-rouge">hello</code>, the type of it is <code class="language-plaintext highlighter-rouge">String</code>, also we define a <code class="language-plaintext highlighter-rouge">static datfetcher</code> for this field, let it return the value of <code class="language-plaintext highlighter-rouge">world</code> for field <code class="language-plaintext highlighter-rouge">hello</code>.<br />
Second we generate the <code class="language-plaintext highlighter-rouge">schema</code> and build a executable <code class="language-plaintext highlighter-rouge">GraphQL</code> object vai this schema.<br />
Third we send a query string <code class="language-plaintext highlighter-rouge">query Query {hello}</code> to the <code class="language-plaintext highlighter-rouge">GraphQL</code> to get the result.
We should know that we could define the schema in 3 ways.</p>

<ul>
  <li>By String</li>
  <li>By IDL file</li>
  <li>By Program</li>
</ul>

<p>By String</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">// IDL string schema</span>
 <span class="nc">String</span> <span class="n">schema</span> <span class="o">=</span> <span class="s">"type Query{hello: String}"</span><span class="o">;</span>

<span class="nc">SchemaParser</span> <span class="n">schemaParser</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">();</span>

<span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="n">schemaParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>

<span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
        <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span><span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"hello"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">StaticDataFetcher</span><span class="o">(</span><span class="s">"world"</span><span class="o">)))</span>
        <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="nc">SchemaGenerator</span> <span class="n">schemaGenerator</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">();</span>
<span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="n">schemaGenerator</span><span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>
<span class="nc">GraphQL</span> <span class="n">build</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>        
</code></pre></div></div>

<p>By IDL file</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//  IDL file shcema</span>
<span class="nc">File</span> <span class="n">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">HelloWorld</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"helloworld.graphqls"</span><span class="o">).</span><span class="na">getFile</span><span class="o">());</span>

<span class="nc">SchemaParser</span> <span class="n">schemaParser</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">();</span>

<span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="n">schemaParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>

<span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
        <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span><span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"hello"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">StaticDataFetcher</span><span class="o">(</span><span class="s">"world"</span><span class="o">)))</span>
        <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="nc">SchemaGenerator</span> <span class="n">schemaGenerator</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">();</span>
<span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="n">schemaGenerator</span><span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>
<span class="nc">GraphQL</span> <span class="n">build</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</code></pre></div></div>

<p>The file in resource folder named <code class="language-plaintext highlighter-rouge">helloworld.graphqls</code></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
    <span class="nl">hello</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre></div></div>
<p>By program</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//  Programmatically</span>
        <span class="nc">GraphQLObjectType</span> <span class="n">queryType</span> <span class="o">=</span> <span class="nc">GraphQLObjectType</span><span class="o">.</span><span class="na">newObject</span><span class="o">()</span>
                <span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="nc">GraphQLFieldDefinition</span><span class="o">.</span><span class="na">newFieldDefinition</span><span class="o">()</span>
                        <span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"hello"</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">Scalars</span><span class="o">.</span><span class="na">GraphQLString</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="s">"world"</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">//Query by</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="nc">GraphQLSchema</span><span class="o">.</span><span class="na">newSchema</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryType</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">GraphQL</span> <span class="n">build</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</code></pre></div></div>
<p>Let‚Äôs get more deep on the GraphQL java, this time, we will make every thing together, and we try to fullfill more points &amp; functions on GraphQL Java</p>

<ul>
  <li>Schema - Object</li>
  <li>Schema - Interface</li>
  <li>Schema - Enumeration</li>
  <li>Schema - Variable &amp; attrubute</li>
  <li>Schema parse cache</li>
  <li>Data fetcher</li>
  <li>Type resolver</li>
  <li>Execution input</li>
  <li>Transfer result to regular json</li>
</ul>

<p>So let‚Äôs start from another example
Step one, define the schema, put it in the resource folder</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
    <span class="nl">patent_biblio</span><span class="p">:</span> <span class="nx">PatentBiblio</span>
    <span class="nx">legal</span><span class="p">:</span> <span class="nx">Legal</span>
    <span class="nx">patent_biblio_legal</span><span class="p">:</span> <span class="nx">PatentBiblioAndLegal</span>

<span class="p">}</span>

<span class="kr">interface</span> <span class="nx">Patent</span> <span class="p">{</span>
    <span class="nx">id</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">pn</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">PatentBiblio</span> <span class="kr">implements</span> <span class="nx">Patent</span><span class="p">{</span>
    <span class="nx">id</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">pn</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">apno</span><span class="p">:</span> <span class="nb">String</span>
    <span class="nx">ans</span><span class="p">:</span> <span class="nx">Assignee</span>
    <span class="nx">familyType</span><span class="p">:</span> <span class="nx">FamilyType</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Assignee</span> <span class="kr">implements</span> <span class="nx">Person</span><span class="p">{</span>
    <span class="nl">name</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">lang</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>

<span class="kr">interface</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="nl">name</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Legal</span> <span class="p">{</span>
    <span class="nl">legalStatus</span><span class="p">:[</span><span class="nb">String</span><span class="p">]</span>
    <span class="nx">eventStatus</span><span class="p">:[</span><span class="nb">String</span><span class="p">]</span>
    <span class="nx">l001ep</span><span class="p">:</span><span class="nb">String</span>
<span class="p">}</span>

<span class="nx">union</span> <span class="nx">PatentBiblioAndLegal</span> <span class="o">=</span> <span class="nx">PatentBiblio</span> <span class="o">|</span> <span class="nx">Legal</span>

<span class="kr">enum</span> <span class="nx">FamilyType</span> <span class="p">{</span>
    <span class="nx">ORIGINAL</span>
    <span class="nx">INPADOC</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">QueryLitigation</span> <span class="p">{</span>
    <span class="nl">litigation</span><span class="p">:</span> <span class="nx">Litigation</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Litigation</span> <span class="p">{</span>
    <span class="nx">defendant</span><span class="p">(</span><span class="nx">queryInput</span><span class="p">:</span> <span class="nx">LitigationQueryInput</span><span class="p">):</span> <span class="nb">String</span>
    <span class="nx">plaintiff</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>

<span class="nx">input</span> <span class="nx">LitigationQueryInput</span> <span class="p">{</span>
    <span class="nl">patentId</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Step two, write test class, NestObjTest.class</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Assignee</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.FamilyType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Legal</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.PatentBiblio</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.PatentBiblioAndLegal</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.core.JsonProcessingException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.databind.ObjectMapper</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.github.benmanes.caffeine.cache.Cache</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.github.benmanes.caffeine.cache.Caffeine</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.preparsed.PreparsedDocumentEntry</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.DataFetcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLObjectType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.RuntimeWiring</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaGenerator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeDefinitionRegistry</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeRuntimeWiring</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">NestObjTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="c1">// Define static value</span>
        <span class="nc">PatentBiblio</span> <span class="n">patentBiblio</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PatentBiblio</span><span class="o">();</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="s">"88d378a5-3909-4e9c-82de-55dd70e4685c"</span><span class="o">);</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setPn</span><span class="o">(</span><span class="s">"IL168994A"</span><span class="o">);</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setApno</span><span class="o">(</span><span class="s">"IL168994"</span><span class="o">);</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setFamilyType</span><span class="o">(</span><span class="nc">FamilyType</span><span class="o">.</span><span class="na">INPADOC</span><span class="o">);</span>

        <span class="nc">Assignee</span> <span class="n">assignee</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Assignee</span><span class="o">();</span>
        <span class="n">assignee</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">"ChrisYe"</span><span class="o">);</span>
        <span class="n">assignee</span><span class="o">.</span><span class="na">setLang</span><span class="o">(</span><span class="s">"EN"</span><span class="o">);</span>

        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setAns</span><span class="o">(</span><span class="n">assignee</span><span class="o">);</span>

        <span class="nc">Legal</span> <span class="n">legal</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Legal</span><span class="o">();</span>
        <span class="n">legal</span><span class="o">.</span><span class="na">setLegalStatus</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">));</span>
        <span class="n">legal</span><span class="o">.</span><span class="na">setEventStatus</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">"61"</span><span class="o">,</span> <span class="s">"62"</span><span class="o">));</span>
        <span class="n">legal</span><span class="o">.</span><span class="na">setL001ep</span><span class="o">(</span><span class="s">"EP"</span><span class="o">);</span>

        <span class="nc">PatentBiblioAndLegal</span> <span class="n">patentBiblioAndLegal</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PatentBiblioAndLegal</span><span class="o">();</span>
        <span class="n">patentBiblioAndLegal</span><span class="o">.</span><span class="na">setPatentBiblio</span><span class="o">(</span><span class="n">patentBiblio</span><span class="o">);</span>
        <span class="n">patentBiblioAndLegal</span><span class="o">.</span><span class="na">setLegal</span><span class="o">(</span><span class="n">legal</span><span class="o">);</span>


        <span class="c1">// Define the schema</span>
        <span class="nc">File</span> <span class="n">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">NestObjTest</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"nestobj.graphqls"</span><span class="o">).</span><span class="na">getPath</span><span class="o">());</span>

        <span class="c1">// Define the TypeDefineRegistry</span>
        <span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>

        <span class="c1">// Define the DataFetcher</span>
        <span class="nc">DataFetcher</span> <span class="n">patentIdDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">Object</span> <span class="n">patentId</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">patentId</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">patentId</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="n">patentBiblio</span><span class="o">.</span><span class="na">getId</span><span class="o">();</span>
        <span class="o">};</span>

        <span class="c1">// Define the run time wiring, map the value bean and DataFetcher to the type or fields</span>
        <span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="c1">// patent_biblio -&gt; value bean</span>
                        <span class="c1">// patent_biblio_legal -&gt; value bean</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"patent_biblio"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="n">patentBiblio</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"patent_biblio_legal"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="n">legal</span><span class="o">)</span>
                <span class="o">)</span>
                <span class="c1">// PatentBiblio -&gt; id -&gt; patentIdDataFetcher</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="n">patentIdDataFetcher</span><span class="o">))</span>
                <span class="c1">// Define the type resolver for the interface Patent</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"Patent"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">PatentBiblio</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="c1">// Define the typeResolver for the interface Person</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"Person"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">Assignee</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Assignee"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Assignee"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="c1">// Define the typeResolver for the union type PatentBiblioAndLegal</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"PatentBiblioAndLegal"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">PatentBiblio</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">Legal</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Legal"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the GraphQLSchema</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">().</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>

        <span class="c1">// Define the cache, using for documentation parsing</span>
        <span class="nc">Cache</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">PreparsedDocumentEntry</span><span class="o">&gt;</span> <span class="n">cache</span> <span class="o">=</span> <span class="nc">Caffeine</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">().</span><span class="na">maximumSize</span><span class="o">(</span><span class="mi">10_000</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the GraphQL</span>
        <span class="nc">GraphQL</span> <span class="n">graphQL</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">)</span>
                <span class="o">.</span><span class="na">preparsedDocumentProvider</span><span class="o">(</span><span class="nl">cache:</span><span class="o">:</span><span class="n">get</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the query string</span>
        <span class="nc">String</span> <span class="n">queryString</span> <span class="o">=</span> <span class="s">"query Query($patentId: String!){patent_biblio {id(patentId: $patentId) pn apno ans{name lang} familyType}}"</span><span class="o">;</span>
        
        <span class="c1">// Define the variableMap</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">,</span> <span class="s">"1111111"</span><span class="o">);</span>

        <span class="c1">// Define the ExecutionInput</span>
        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="nc">Long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="c1">// Turn it into regular json</span>
        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">graphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">specificationResult</span> <span class="o">=</span> <span class="n">executionResult</span><span class="o">.</span><span class="na">toSpecification</span><span class="o">();</span>

        <span class="nc">ObjectMapper</span> <span class="n">objectMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">specificationResult</span><span class="o">));</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonProcessingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="nc">Long</span> <span class="n">endTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Cost:"</span> <span class="o">+</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)</span> <span class="o">+</span> <span class="s">" ms"</span><span class="o">);</span>

        <span class="c1">// Execute the query once more, compare the time cost to check if cache works</span>
        <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>
        <span class="n">queryString</span> <span class="o">=</span> <span class="s">"query Query($patentId: String!){patent_biblio {id(patentId: $patentId) pn apno ans{name lang} familyType}}"</span><span class="o">;</span>
        <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">,</span> <span class="s">"1111111"</span><span class="o">);</span>
        <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="n">executionResult</span> <span class="o">=</span> <span class="n">graphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>
        <span class="n">specificationResult</span> <span class="o">=</span> <span class="n">executionResult</span><span class="o">.</span><span class="na">toSpecification</span><span class="o">();</span>

        <span class="n">objectMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">specificationResult</span><span class="o">));</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonProcessingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">endTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Cost:"</span> <span class="o">+</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)</span> <span class="o">+</span> <span class="s">" ms"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>Step 3, define some beans, correspondence with the schema</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Assignee</span> <span class="kd">extends</span> <span class="nc">Person</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">lang</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getLang</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">lang</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLang</span><span class="o">(</span><span class="nc">String</span> <span class="n">lang</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">lang</span> <span class="o">=</span> <span class="n">lang</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.entity</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/8/2017.
 */</span>
<span class="kd">public</span> <span class="kd">enum</span> <span class="nc">FamilyType</span> <span class="o">{</span>
    <span class="no">ORIGINAL</span><span class="o">(</span><span class="s">"ORIGINAL"</span><span class="o">),</span>
    <span class="no">INPADOC</span><span class="o">(</span><span class="s">"INPADOC"</span><span class="o">);</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">familyType</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nf">FamilyType</span><span class="o">(</span><span class="nc">String</span> <span class="n">familyType</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">familyType</span> <span class="o">=</span> <span class="n">familyType</span><span class="o">;</span>

    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getFamilyType</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">familyType</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFamilyType</span><span class="o">(</span><span class="nc">String</span> <span class="n">familyType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">familyType</span> <span class="o">=</span> <span class="n">familyType</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.entity</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/8/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Legal</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">l001ep</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">legalStatus</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">eventStatus</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getL001ep</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">l001ep</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setL001ep</span><span class="o">(</span><span class="nc">String</span> <span class="n">l001ep</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">l001ep</span> <span class="o">=</span> <span class="n">l001ep</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getLegalStatus</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">legalStatus</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLegalStatus</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">legalStatus</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">legalStatus</span> <span class="o">=</span> <span class="n">legalStatus</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getEventStatus</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">eventStatus</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setEventStatus</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">eventStatus</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">eventStatus</span> <span class="o">=</span> <span class="n">eventStatus</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.entity</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PatentBiblio</span> <span class="kd">extends</span> <span class="nc">Patent</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">apno</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Person</span> <span class="n">ans</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">FamilyType</span> <span class="n">familyType</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getApno</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">apno</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setApno</span><span class="o">(</span><span class="nc">String</span> <span class="n">apno</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">apno</span> <span class="o">=</span> <span class="n">apno</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Person</span> <span class="nf">getAns</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">ans</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAns</span><span class="o">(</span><span class="nc">Person</span> <span class="n">ans</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">ans</span> <span class="o">=</span> <span class="n">ans</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">FamilyType</span> <span class="nf">getFamilyType</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">familyType</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFamilyType</span><span class="o">(</span><span class="nc">FamilyType</span> <span class="n">familyType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">familyType</span> <span class="o">=</span> <span class="n">familyType</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.entity</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Person</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.entity</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PatentBiblioAndLegal</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">PatentBiblio</span> <span class="n">patentBiblio</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Legal</span> <span class="n">legal</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">PatentBiblio</span> <span class="nf">getPatentBiblio</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">patentBiblio</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPatentBiblio</span><span class="o">(</span><span class="nc">PatentBiblio</span> <span class="n">patentBiblio</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">patentBiblio</span> <span class="o">=</span> <span class="n">patentBiblio</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Legal</span> <span class="nf">getLegal</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">legal</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLegal</span><span class="o">(</span><span class="nc">Legal</span> <span class="n">legal</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">legal</span> <span class="o">=</span> <span class="n">legal</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>Then let‚Äôs run the code</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:{</span><span class="dl">"</span><span class="s2">patent_biblio</span><span class="dl">"</span><span class="p">:{</span><span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">1111111</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">pn</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">IL168994A</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">apno</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">IL168994</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">ans</span><span class="dl">"</span><span class="p">:{</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">ChrisYe</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">lang</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">EN</span><span class="dl">"</span><span class="p">},</span><span class="dl">"</span><span class="s2">familyType</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">INPADOC</span><span class="dl">"</span><span class="p">}}}</span>
<span class="nl">Cost</span><span class="p">:</span><span class="mi">1699</span> <span class="nx">ms</span>
<span class="p">{</span><span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:{</span><span class="dl">"</span><span class="s2">patent_biblio</span><span class="dl">"</span><span class="p">:{</span><span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">1111111</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">pn</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">IL168994A</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">apno</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">IL168994</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">ans</span><span class="dl">"</span><span class="p">:{</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">ChrisYe</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">lang</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">EN</span><span class="dl">"</span><span class="p">},</span><span class="dl">"</span><span class="s2">familyType</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">INPADOC</span><span class="dl">"</span><span class="p">}}}</span>
<span class="nl">Cost</span><span class="p">:</span><span class="mi">3</span> <span class="nx">ms</span>
</code></pre></div></div>

<p>The whole pictures of this example is like below:
<img src="http://localhost:4000/images/graphql/GraphQL_NestObject.png" alt="GraphQL_NestObject.png" /></p>

<p>From this example, we could see that:</p>

<ul>
  <li>DataFetcher is a function interface, we could use the environment to get the variables</li>
  <li>GraphQL Java will automatically map the bean fields with the data result</li>
  <li>TypeResolver is needed when some type is implement the interface</li>
  <li>The cache works fine for the documentation parsing, suggest to use Caffeine Cache</li>
  <li>Use <code class="language-plaintext highlighter-rouge">toSpecification</code> to turn the result into Map object, so we can turn it into regular json object by using serialize tools</li>
</ul>

<p>So let‚Äôs write more examples for <code class="language-plaintext highlighter-rouge">Exception</code>, <code class="language-plaintext highlighter-rouge">Validation</code>, <code class="language-plaintext highlighter-rouge">Batch Get</code>, <code class="language-plaintext highlighter-rouge">Asynchronization fetch</code>,</p>

<h2 id="exception">Exception</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Litigation</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedHashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ErrorType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExceptionWhileDataFetching</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQLError</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.AsyncExecutionStrategy</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.language.SourceLocation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLObjectType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.RuntimeWiring</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaGenerator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeDefinitionRegistry</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeRuntimeWiring</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ExceptionTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Litigation</span> <span class="n">litigation</span>  <span class="o">=</span> <span class="k">new</span> <span class="nc">Litigation</span><span class="o">();</span>
        <span class="n">litigation</span><span class="o">.</span><span class="na">setDefendant</span><span class="o">(</span><span class="s">"Zhang San"</span><span class="o">);</span>
        <span class="n">litigation</span><span class="o">.</span><span class="na">setPlaintiff</span><span class="o">(</span><span class="s">"Li Si"</span><span class="o">);</span>

        <span class="c1">// Define the schema</span>
        <span class="nc">File</span> <span class="n">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">ExceptionTest</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"inputobj.graphqls"</span><span class="o">).</span><span class="na">getPath</span><span class="o">());</span>

        <span class="c1">// Define the TypeDefineRegistry</span>
        <span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>

        <span class="c1">// Define the run time wiring</span>
        <span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"LitigationQuery"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"litigation"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                            <span class="k">throw</span> <span class="k">new</span> <span class="nf">CustomRuntimeException</span><span class="o">();</span>
                        <span class="o">})</span>
                <span class="o">)</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Litigation"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"defendant"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                            <span class="nc">Object</span> <span class="n">queryInput</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"queryInput"</span><span class="o">);</span>
                            <span class="k">if</span><span class="o">(</span><span class="n">queryInput</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
                                <span class="nc">Object</span> <span class="n">patentId</span> <span class="o">=</span> <span class="nc">Optional</span><span class="o">.</span><span class="na">ofNullable</span><span class="o">(((</span><span class="nc">HashMap</span><span class="o">)</span><span class="n">queryInput</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">)).</span><span class="na">orElse</span><span class="o">(</span><span class="s">"6666666666666"</span><span class="o">);</span>
                                <span class="k">return</span> <span class="n">patentId</span><span class="o">;</span>
                            <span class="o">}</span>
                            <span class="k">return</span> <span class="s">"6666666666666"</span><span class="o">;</span>
                        <span class="o">}))</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"Litigation"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">Litigation</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Litigation"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Litigation"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the GraphQLSchema</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">().</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>

        <span class="c1">// Define the GraphQL</span>
        <span class="nc">GraphQL</span> <span class="n">graphQL</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">)</span>
<span class="c1">//                .queryExecutionStrategy(new AsyncExecutionStrategy(handlerParameters -&gt; {</span>
<span class="c1">//                    ExceptionWhileDataFetching error = new ExceptionWhileDataFetching(handlerParameters.getPath(), handlerParameters.getException(), handlerParameters.getField().getSourceLocation());</span>
<span class="c1">//                    handlerParameters.getExecutionContext().addError(error, handlerParameters.getPath());</span>
<span class="c1">//                }))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="nc">String</span> <span class="n">queryString</span> <span class="o">=</span> <span class="s">"query LitigationQuery($input: LitigationQueryInput){litigation{defendant(queryInput: $input)}}"</span><span class="o">;</span>

        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">litigationQueryInput</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">litigationQueryInput</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">,</span> <span class="s">"2222222222222"</span><span class="o">);</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"input"</span><span class="o">,</span> <span class="n">litigationQueryInput</span><span class="o">);</span>
        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"LitigationQuery"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">graphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>
        <span class="n">executionResult</span><span class="o">.</span><span class="na">getErrors</span><span class="o">().</span><span class="na">stream</span><span class="o">().</span><span class="na">forEach</span><span class="o">(</span><span class="n">error</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"my customized exception:"</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"foo"</span><span class="o">));</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"fizz"</span><span class="o">));</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"message"</span><span class="o">));</span>
        <span class="o">});</span>


    <span class="o">}</span>

    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">CustomRuntimeException</span> <span class="kd">extends</span> <span class="nc">RuntimeException</span> <span class="kd">implements</span> <span class="nc">GraphQLError</span> <span class="o">{</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">getExtensions</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">customAttributes</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedHashMap</span><span class="o">&lt;&gt;();</span>
            <span class="n">customAttributes</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"foo"</span><span class="o">,</span> <span class="s">"bar"</span><span class="o">);</span>
            <span class="n">customAttributes</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"fizz"</span><span class="o">,</span> <span class="s">"whizz"</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">customAttributes</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">SourceLocation</span><span class="o">&gt;</span> <span class="nf">getLocations</span> <span class="o">(){</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">ErrorType</span> <span class="nf">getErrorType</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="nc">ErrorType</span><span class="o">.</span><span class="na">DataFetchingException</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>If an exception happens during the data fetcher call, GraphQL will throws the <code class="language-plaintext highlighter-rouge">graphql.ExceptionWhileDataFetching</code> error, and if the exception you throw is the <code class="language-plaintext highlighter-rouge">GraphQLError</code>, then GraphQL will transfer it into the <code class="language-plaintext highlighter-rouge">graphql.ExceptionWhileDataFetching</code>
So this means you can customize your own exception.
In the example above, we define a customized exception named <code class="language-plaintext highlighter-rouge">CustomRuntimeException</code>, implements the GraphQLError, and add two extention attributes, then run the code, the result will be</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">19</span><span class="o">:</span><span class="mi">47</span><span class="o">:</span><span class="mf">07.933</span> <span class="o">[</span><span class="n">main</span><span class="o">]</span> <span class="no">WARN</span>  <span class="n">g</span><span class="o">.</span><span class="na">e</span><span class="o">.</span><span class="na">SimpleDataFetcherExceptionHandler</span> <span class="o">-</span> <span class="nc">Exception</span> <span class="k">while</span> <span class="n">fetching</span> <span class="nf">data</span> <span class="o">(/</span><span class="n">litigation</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span>
<span class="n">com</span><span class="o">.</span><span class="na">chris</span><span class="o">.</span><span class="na">graphql</span><span class="o">.</span><span class="na">ExceptionTest</span><span class="n">$CustomRuntimeException</span><span class="o">:</span> <span class="kc">null</span>
	<span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">chris</span><span class="o">.</span><span class="na">graphql</span><span class="o">.</span><span class="na">ExceptionTest</span><span class="o">.</span><span class="na">lambda</span><span class="n">$null</span><span class="err">$</span><span class="mi">0</span><span class="o">(</span><span class="nc">ExceptionTest</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">47</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">execution</span><span class="o">.</span><span class="na">ExecutionStrategy</span><span class="o">.</span><span class="na">fetchField</span><span class="o">(</span><span class="nc">ExecutionStrategy</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">219</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">execution</span><span class="o">.</span><span class="na">ExecutionStrategy</span><span class="o">.</span><span class="na">resolveField</span><span class="o">(</span><span class="nc">ExecutionStrategy</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">165</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">execution</span><span class="o">.</span><span class="na">AsyncExecutionStrategy</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="nc">AsyncExecutionStrategy</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">55</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">execution</span><span class="o">.</span><span class="na">Execution</span><span class="o">.</span><span class="na">executeOperation</span><span class="o">(</span><span class="nc">Execution</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">154</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">execution</span><span class="o">.</span><span class="na">Execution</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="nc">Execution</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">98</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="nc">GraphQL</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">546</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQL</span><span class="o">.</span><span class="na">parseValidateAndExecute</span><span class="o">(</span><span class="nc">GraphQL</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">488</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQL</span><span class="o">.</span><span class="na">executeAsync</span><span class="o">(</span><span class="nc">GraphQL</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">463</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="nc">GraphQL</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">394</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">chris</span><span class="o">.</span><span class="na">graphql</span><span class="o">.</span><span class="na">ExceptionTest</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="nc">ExceptionTest</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">91</span><span class="o">)</span>
<span class="n">my</span> <span class="n">customized</span> <span class="nl">exception:</span>
<span class="n">bar</span>
<span class="n">whizz</span>
<span class="kc">null</span>
</code></pre></div></div>
<p>Imagine that you don‚Äôt like the exception message and want to define it by your self, so you define the  <code class="language-plaintext highlighter-rouge">AsyncExecutionStrategy</code> to change the exception behavior</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">GraphQL</span> <span class="n">graphQL</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">)</span>
                <span class="o">.</span><span class="na">queryExecutionStrategy</span><span class="o">(</span><span class="k">new</span> <span class="nc">AsyncExecutionStrategy</span><span class="o">(</span><span class="n">handlerParameters</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">ExceptionWhileDataFetching</span> <span class="n">error</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ExceptionWhileDataFetching</span><span class="o">(</span><span class="n">handlerParameters</span><span class="o">.</span><span class="na">getPath</span><span class="o">(),</span> <span class="n">handlerParameters</span><span class="o">.</span><span class="na">getException</span><span class="o">(),</span> <span class="n">handlerParameters</span><span class="o">.</span><span class="na">getField</span><span class="o">().</span><span class="na">getSourceLocation</span><span class="o">());</span>
                    <span class="n">handlerParameters</span><span class="o">.</span><span class="na">getExecutionContext</span><span class="o">().</span><span class="na">addError</span><span class="o">(</span><span class="n">error</span><span class="o">,</span> <span class="n">handlerParameters</span><span class="o">.</span><span class="na">getPath</span><span class="o">());</span>
                <span class="o">}))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</code></pre></div></div>

<h2 id="asynchronized-data-fetching">Asynchronized data fetching</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Assignee</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.FamilyType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Legal</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.PatentBiblio</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.PatentBiblioAndLegal</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.core.JsonProcessingException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.databind.ObjectMapper</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.CompletableFuture</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.ExecutionException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.TimeoutException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLObjectType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.RuntimeWiring</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaGenerator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeDefinitionRegistry</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeRuntimeWiring</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/2/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AsynTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">Long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="c1">// Define static value</span>
        <span class="nc">PatentBiblio</span> <span class="n">patentBiblio</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PatentBiblio</span><span class="o">();</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="s">"88d378a5-3909-4e9c-82de-55dd70e4685c"</span><span class="o">);</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setPn</span><span class="o">(</span><span class="s">"IL168994A"</span><span class="o">);</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setApno</span><span class="o">(</span><span class="s">"IL168994"</span><span class="o">);</span>
        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setFamilyType</span><span class="o">(</span><span class="nc">FamilyType</span><span class="o">.</span><span class="na">INPADOC</span><span class="o">);</span>

        <span class="nc">Assignee</span> <span class="n">assignee</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Assignee</span><span class="o">();</span>
        <span class="n">assignee</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">"ChrisYe"</span><span class="o">);</span>
        <span class="n">assignee</span><span class="o">.</span><span class="na">setLang</span><span class="o">(</span><span class="s">"EN"</span><span class="o">);</span>

        <span class="n">patentBiblio</span><span class="o">.</span><span class="na">setAns</span><span class="o">(</span><span class="n">assignee</span><span class="o">);</span>


        <span class="nc">Legal</span> <span class="n">legal</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Legal</span><span class="o">();</span>
        <span class="n">legal</span><span class="o">.</span><span class="na">setLegalStatus</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">));</span>
        <span class="n">legal</span><span class="o">.</span><span class="na">setEventStatus</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">"61"</span><span class="o">,</span> <span class="s">"62"</span><span class="o">));</span>
        <span class="n">legal</span><span class="o">.</span><span class="na">setL001ep</span><span class="o">(</span><span class="s">"EP"</span><span class="o">);</span>

        <span class="nc">PatentBiblioAndLegal</span> <span class="n">patentBiblioAndLegal</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PatentBiblioAndLegal</span><span class="o">();</span>
        <span class="n">patentBiblioAndLegal</span><span class="o">.</span><span class="na">setPatentBiblio</span><span class="o">(</span><span class="n">patentBiblio</span><span class="o">);</span>
        <span class="n">patentBiblioAndLegal</span><span class="o">.</span><span class="na">setLegal</span><span class="o">(</span><span class="n">legal</span><span class="o">);</span>


        <span class="c1">// Define the schema</span>
        <span class="nc">File</span> <span class="n">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">AsynTest</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"nestobj.graphqls"</span><span class="o">).</span><span class="na">getPath</span><span class="o">());</span>

        <span class="c1">// Define the TypeDefineRegistry</span>
        <span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>

        <span class="c1">// Define the run time wiring</span>
        <span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"patent_biblio"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                            <span class="nc">CompletableFuture</span> <span class="n">future</span> <span class="o">=</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
                                <span class="k">try</span> <span class="o">{</span>
                                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"i am in patent_biblio"</span><span class="o">);</span>
                                    <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
                                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                                <span class="o">}</span>
                                <span class="k">return</span> <span class="n">patentBiblio</span><span class="o">;</span>
                            <span class="o">});</span>
                            <span class="k">return</span> <span class="n">future</span><span class="o">;</span>
                        <span class="o">})</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"legal"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>

                            <span class="nc">CompletableFuture</span> <span class="n">future</span> <span class="o">=</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
                                <span class="k">try</span> <span class="o">{</span>
                                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"i am in patent_biblio_legal"</span><span class="o">);</span>
                                    <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
                                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                                <span class="o">}</span>
                                <span class="k">return</span> <span class="n">legal</span><span class="o">;</span>
                            <span class="o">});</span>
                            <span class="k">return</span> <span class="n">future</span><span class="o">;</span>
                        <span class="o">})</span>
                <span class="o">)</span>
<span class="c1">//                .type("Query", builder -&gt; builder</span>
<span class="c1">//                        .dataFetcher("patent_biblio", env -&gt; {</span>
<span class="c1">//                            try {</span>
<span class="c1">//                                    System.out.println("i am in patent_biblio");</span>
<span class="c1">//                                    Thread.sleep(5000);</span>
<span class="c1">//                                } catch (InterruptedException e) {</span>
<span class="c1">//                                    e.printStackTrace();</span>
<span class="c1">//                                }</span>
<span class="c1">//                                return patentBiblio;</span>
<span class="c1">//                        })</span>
<span class="c1">//                        .dataFetcher("legal", env -&gt; {</span>
<span class="c1">//                            try {</span>
<span class="c1">//                                System.out.println("i am in legal");</span>
<span class="c1">//                                Thread.sleep(5000);</span>
<span class="c1">//                            } catch (InterruptedException e) {</span>
<span class="c1">//                                e.printStackTrace();</span>
<span class="c1">//                            }</span>
<span class="c1">//                            return legal;</span>
<span class="c1">//                        })</span>
<span class="c1">//                )</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                            <span class="nc">Object</span> <span class="n">patentId</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">);</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">patentId</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                                <span class="k">return</span> <span class="n">patentId</span><span class="o">;</span>
                            <span class="o">}</span>
                            <span class="k">return</span> <span class="n">patentBiblio</span><span class="o">.</span><span class="na">getId</span><span class="o">();</span>
                        <span class="o">}))</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"Patent"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">PatentBiblio</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"Person"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">Assignee</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Assignee"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Assignee"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="nc">TypeRuntimeWiring</span><span class="o">.</span><span class="na">newTypeWiring</span><span class="o">(</span><span class="s">"PatentBiblioAndLegal"</span><span class="o">).</span><span class="na">typeResolver</span><span class="o">(</span><span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Object</span> <span class="n">javaObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getObject</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">PatentBiblio</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">javaObject</span> <span class="k">instanceof</span> <span class="nc">Legal</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"Legal"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="o">(</span><span class="nc">GraphQLObjectType</span><span class="o">)</span> <span class="n">env</span><span class="o">.</span><span class="na">getSchema</span><span class="o">().</span><span class="na">getType</span><span class="o">(</span><span class="s">"PatentBiblio"</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the GraphQLSchema</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">().</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>

        <span class="c1">// Define the GraphQL</span>
        <span class="nc">GraphQL</span> <span class="n">graphQL</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Execute the query</span>
        <span class="c1">// String queryString = "{patent_biblio {id pn apno ans{name lang} familyType}}";</span>

        <span class="c1">// Execute the union query</span>
        <span class="c1">// String queryString = "{patent_biblio_legal {... on PatentBiblio {id} ... on Legal {legalStatus}}}";</span>
        <span class="c1">//ExecutionResult executionResult = graphQL.execute(queryString);</span>

        <span class="c1">// Query by ExecutionInput</span>
        <span class="nc">String</span> <span class="n">queryString</span> <span class="o">=</span> <span class="s">"query Query($patentId: String!){patent_biblio {id(patentId: $patentId) pn apno ans{name lang} familyType} legal {legalStatus}}"</span><span class="o">;</span>

        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">,</span> <span class="s">"1111111"</span><span class="o">);</span>
        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">ExecutionResult</span><span class="o">&gt;</span> <span class="n">completableFuture</span> <span class="o">=</span> <span class="n">graphQL</span><span class="o">.</span><span class="na">executeAsync</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>

        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">specificationResult</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">specificationResult</span> <span class="o">=</span> <span class="n">completableFuture</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="nc">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">).</span><span class="na">toSpecification</span><span class="o">();</span>
            <span class="nc">ObjectMapper</span> <span class="n">objectMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">specificationResult</span><span class="o">));</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonProcessingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">ExecutionException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">TimeoutException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="nc">Long</span> <span class="n">endTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>This example is quite similar with the <code class="language-plaintext highlighter-rouge">NestObject.class</code>, the most different place is we change the datafetcher behavior from return the data result directly into return the CompletableFuture
GraphQL support get the value asynchronized by returning the CompletableFuture in each Datafetcher. So think about that we have several fields and want to get the value concurrently, then we can use 
Completable Future to make this happen. So the result of the example above will be:</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span> <span class="n">am</span> <span class="n">in</span> <span class="n">patent_biblio</span>
<span class="n">i</span> <span class="n">am</span> <span class="n">in</span> <span class="n">patent_biblio_legal</span>
<span class="o">{</span><span class="s">"data"</span><span class="o">:{</span><span class="s">"patent_biblio"</span><span class="o">:{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1111111"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"IL168994A"</span><span class="o">,</span><span class="s">"apno"</span><span class="o">:</span><span class="s">"IL168994"</span><span class="o">,</span><span class="s">"ans"</span><span class="o">:{</span><span class="s">"name"</span><span class="o">:</span><span class="s">"ChrisYe"</span><span class="o">,</span><span class="s">"lang"</span><span class="o">:</span><span class="s">"EN"</span><span class="o">},</span><span class="s">"familyType"</span><span class="o">:</span><span class="s">"INPADOC"</span><span class="o">},</span><span class="s">"legal"</span><span class="o">:{</span><span class="s">"legalStatus"</span><span class="o">:[</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">]}}}</span>
<span class="mi">7736</span>
</code></pre></div></div>

<p>Please notice that, the sentence <code class="language-plaintext highlighter-rouge">i am in patent_biblio</code> &amp; <code class="language-plaintext highlighter-rouge">i am in patent_biblio_legal</code> will display at the same time which means GraphQL get the result concurrently.</p>

<h2 id="batch-data-loader--validation">Batch data loader &amp; Validation</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.AWSCredential</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Patent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Person</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.core.JsonProcessingException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.databind.ObjectMapper</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.dataloader.BatchLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dataloader.DataLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dataloader.DataLoaderRegistry</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.CompletableFuture</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.function.BiFunction</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQLError</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.annotations.GraphQLTypeResolver</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.ExecutionPath</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.ChainedInstrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.Instrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.fieldvalidation.FieldAndArguments</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.fieldvalidation.FieldValidation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.fieldvalidation.FieldValidationEnvironment</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.fieldvalidation.FieldValidationInstrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.fieldvalidation.SimpleFieldValidation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.tracing.TracingInstrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.DataFetcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.RuntimeWiring</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaGenerator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeDefinitionRegistry</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/21/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BatchTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">BatchLoader</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentBatchLoader</span> <span class="o">=</span> <span class="n">keys</span> <span class="o">-&gt;</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">getPatentByPatentIds</span><span class="o">(</span><span class="n">keys</span><span class="o">));</span>

        <span class="nc">DataLoader</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentDataLoader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataLoader</span><span class="o">(</span><span class="n">patentBatchLoader</span><span class="o">);</span>

        <span class="nc">DataFetcher</span> <span class="n">patentDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="n">patentDataLoader</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">));</span>

        <span class="nc">DataFetcher</span> <span class="n">offsetDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">AWSCredential</span> <span class="n">awsCredential</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getContext</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">awsCredential</span><span class="o">.</span><span class="na">getFoo</span><span class="o">());</span>
            <span class="nc">Integer</span> <span class="n">offset</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"offset"</span><span class="o">);</span>
            <span class="nc">Integer</span> <span class="n">limit</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"limit"</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">offset</span> <span class="o">+</span> <span class="n">limit</span><span class="o">;</span>
        <span class="o">};</span>


        <span class="nc">DataFetcher</span> <span class="n">totalDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">patentId</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">);</span>
            <span class="k">return</span> <span class="nf">getTotalCountByPatentId</span><span class="o">(</span><span class="n">patentId</span><span class="o">);</span>
        <span class="o">};</span>

        <span class="nc">DataFetcher</span> <span class="n">patentCitationDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">Patent</span> <span class="n">patent</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getSource</span><span class="o">();</span>
                <span class="k">return</span> <span class="n">patentDataLoader</span><span class="o">.</span><span class="na">loadMany</span><span class="o">(</span><span class="n">getPatentCitationIds</span><span class="o">(</span><span class="n">patent</span><span class="o">.</span><span class="na">getId</span><span class="o">()));</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">EMPTY_LIST</span><span class="o">;</span>
        <span class="o">};</span>

        <span class="nc">Long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="c1">// Define the schema</span>
        <span class="nc">File</span> <span class="n">schemaFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">DataLoader</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"dataloader.graphqls"</span><span class="o">).</span><span class="na">getPath</span><span class="o">());</span>

        <span class="c1">// Define the type definition registry</span>
        <span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">schemaFile</span><span class="o">);</span>


        <span class="c1">// Define the runtime wiring</span>
        <span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"patent"</span><span class="o">,</span> <span class="n">patentDataFetcher</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"offset"</span><span class="o">,</span> <span class="n">offsetDataFetcher</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"total"</span><span class="o">,</span> <span class="n">totalDataFetcher</span><span class="o">)</span>
                <span class="o">)</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Patent"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"citations"</span><span class="o">,</span> <span class="n">patentCitationDataFetcher</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the graphQL schema</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">().</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>

        <span class="c1">// Define data loader instrumentation</span>
        <span class="nc">DataLoaderRegistry</span> <span class="n">registry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataLoaderRegistry</span><span class="o">();</span>
        <span class="n">registry</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="s">"patent"</span><span class="o">,</span> <span class="n">patentDataLoader</span><span class="o">);</span>
        <span class="nc">DataLoaderDispatcherInstrumentation</span> <span class="n">dataLoaderDispatcherInstrumentation</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataLoaderDispatcherInstrumentation</span><span class="o">(</span><span class="n">registry</span><span class="o">);</span>

        <span class="c1">// Define field validation instrumentation</span>
        <span class="nc">ExecutionPath</span> <span class="n">fieldPath</span> <span class="o">=</span> <span class="nc">ExecutionPath</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"/patent"</span><span class="o">);</span>
        <span class="nc">FieldValidation</span> <span class="n">fieldValidation</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleFieldValidation</span><span class="o">()</span>
                <span class="o">.</span><span class="na">addRule</span><span class="o">(</span><span class="n">fieldPath</span><span class="o">,</span> <span class="o">(</span><span class="n">fieldAndArguments</span><span class="o">,</span> <span class="n">fieldValidationEnvironment</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>
                    <span class="nc">Integer</span> <span class="n">offset</span> <span class="o">=</span> <span class="n">fieldAndArguments</span><span class="o">.</span><span class="na">getArgumentValue</span><span class="o">(</span><span class="s">"offset"</span><span class="o">);</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">offset</span> <span class="o">&gt;</span> <span class="mi">1000</span><span class="o">){</span>
                        <span class="k">return</span> <span class="nc">Optional</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">fieldValidationEnvironment</span><span class="o">.</span><span class="na">mkError</span><span class="o">(</span><span class="s">"offset should less equal 1000"</span><span class="o">,</span> <span class="n">fieldAndArguments</span><span class="o">));</span>
                    <span class="o">}</span>
                    <span class="k">return</span> <span class="nc">Optional</span><span class="o">.</span><span class="na">empty</span><span class="o">();</span>
                <span class="o">});</span>
        <span class="nc">FieldValidationInstrumentation</span> <span class="n">fieldValidationInstrumentation</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FieldValidationInstrumentation</span><span class="o">(</span><span class="n">fieldValidation</span><span class="o">);</span>

        <span class="nc">TracingInstrumentation</span> <span class="n">tracingInstrumentation</span>  <span class="o">=</span> <span class="k">new</span> <span class="nc">TracingInstrumentation</span><span class="o">();</span>

        <span class="c1">// Define the instrumentation chain</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Instrumentation</span><span class="o">&gt;</span> <span class="n">chainedList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="n">chainedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">dataLoaderDispatcherInstrumentation</span><span class="o">);</span>
        <span class="n">chainedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">fieldValidationInstrumentation</span><span class="o">);</span>
        <span class="n">chainedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tracingInstrumentation</span><span class="o">);</span>
        <span class="nc">ChainedInstrumentation</span> <span class="n">chainedInstrumentation</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ChainedInstrumentation</span><span class="o">(</span><span class="n">chainedList</span><span class="o">);</span>

        <span class="c1">// Define the graphQL</span>
        <span class="nc">GraphQL</span> <span class="n">graphQL</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">)</span>
                <span class="o">.</span><span class="na">instrumentation</span><span class="o">(</span><span class="n">chainedInstrumentation</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the execution</span>
        <span class="c1">//String queryString = "query Query($patentId: String!,$offset: Int,$limit: Int){patent(patentId: $patentId, offset: $offset, limit: $limit) {id pn my_name person {name} citations{id pn citations{id pn citations{id pn}}}} total(patentId: $patentId) offset(offset: $offset, limit: $limit)}";</span>
        <span class="nc">String</span> <span class="n">queryString</span> <span class="o">=</span> <span class="s">"query Query($patentId: String!, $offset: Int, $limit: Int) {\n"</span> <span class="o">+</span>
                <span class="s">"  patent(patentId: $patentId, offset: $offset, limit: $limit) {\n"</span> <span class="o">+</span>
                <span class="s">"    id\n"</span> <span class="o">+</span>
                <span class="s">"    pn\n"</span> <span class="o">+</span>
                <span class="s">"    my_name\n"</span> <span class="o">+</span>
                <span class="s">"    person {\n"</span> <span class="o">+</span>
                <span class="s">"      name\n"</span> <span class="o">+</span>
                <span class="s">"    }\n"</span> <span class="o">+</span>
                <span class="s">"    citations {\n"</span> <span class="o">+</span>
                <span class="s">"      ...citationPatent\n"</span> <span class="o">+</span>
                <span class="s">"      citations {\n"</span> <span class="o">+</span>
                <span class="s">"        ...citationPatent\n"</span> <span class="o">+</span>
                <span class="s">"        citations {\n"</span> <span class="o">+</span>
                <span class="s">"          ...citationPatent\n"</span> <span class="o">+</span>
                <span class="s">"        }\n"</span> <span class="o">+</span>
                <span class="s">"      }\n"</span> <span class="o">+</span>
                <span class="s">"    }\n"</span> <span class="o">+</span>
                <span class="s">"  }\n"</span> <span class="o">+</span>
                <span class="s">"  total(patentId: $patentId)\n"</span> <span class="o">+</span>
                <span class="s">"  offset(offset: $offset, limit: $limit)\n"</span> <span class="o">+</span>
                <span class="s">"}\n"</span> <span class="o">+</span>
                <span class="s">"\n"</span> <span class="o">+</span>
                <span class="s">"fragment citationPatent on Patent {\n"</span> <span class="o">+</span>
                <span class="s">"  id\n"</span> <span class="o">+</span>
                <span class="s">"  pn\n"</span> <span class="o">+</span>
                <span class="s">"}"</span><span class="o">;</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">,</span> <span class="s">"1"</span><span class="o">);</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"offset"</span><span class="o">,</span> <span class="s">"1000"</span><span class="o">);</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"limit"</span><span class="o">,</span> <span class="s">"10"</span><span class="o">);</span>

        <span class="c1">// Define the context, for example: AWS Credential</span>
        <span class="nc">AWSCredential</span> <span class="n">awsCredential</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AWSCredential</span><span class="o">(</span><span class="s">"foo"</span><span class="o">,</span> <span class="s">"bar"</span><span class="o">);</span>

        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">context</span><span class="o">(</span><span class="n">awsCredential</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">graphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">specificationResult</span> <span class="o">=</span> <span class="n">executionResult</span><span class="o">.</span><span class="na">toSpecification</span><span class="o">();</span>

        <span class="nc">ObjectMapper</span> <span class="n">objectMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">specificationResult</span><span class="o">));</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonProcessingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="nc">Long</span> <span class="n">endTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Total Cost: "</span> <span class="o">+</span> <span class="o">(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)</span> <span class="o">+</span> <span class="s">" ms"</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="kd">static</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">patentCitationIdMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">();</span>

    <span class="kd">static</span> <span class="o">{</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"2"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"3"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"4"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">}));</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getPatentCitationIds</span><span class="o">(</span><span class="nc">String</span> <span class="n">patentId</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">patentId</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">getPatentByPatentIds</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">patentIds</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentCitations</span> <span class="o">=</span> <span class="n">patentIds</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">id</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="nc">Patent</span> <span class="n">patent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Patent</span><span class="o">();</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setPn</span><span class="o">(</span><span class="s">"AAA"</span><span class="o">);</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setMyName</span><span class="o">(</span><span class="s">"Patent Demo"</span><span class="o">);</span>
            <span class="nc">Person</span> <span class="n">person</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Person</span><span class="o">();</span>
            <span class="n">person</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">"Chris"</span><span class="o">);</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setPerson</span><span class="o">(</span><span class="n">person</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">patent</span><span class="o">;</span>
        <span class="o">}).</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
        <span class="k">return</span> <span class="n">patentCitations</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="nc">Integer</span> <span class="nf">getTotalCountByPatentId</span><span class="o">(</span><span class="nc">String</span> <span class="n">patentId</span><span class="o">){</span>
        <span class="k">return</span> <span class="mi">100</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>Sometimes, we need to get the data in the batch model, for example, we need to get one patent, and this patent have many leaves patents, so in this situation,
we could use the <code class="language-plaintext highlighter-rouge">Dataloader</code> on the DataFetcher. The result of the example above could be:</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">foo</span>
<span class="o">{</span><span class="s">"data"</span><span class="o">:{</span><span class="s">"patent"</span><span class="o">:{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"my_name"</span><span class="o">:</span><span class="kc">null</span><span class="o">,</span><span class="s">"person"</span><span class="o">:{</span><span class="s">"name"</span><span class="o">:</span><span class="s">"Chris"</span><span class="o">},</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]}]}]},</span><span class="s">"total"</span><span class="o">:</span><span class="mi">100</span><span class="o">,</span><span class="s">"offset"</span><span class="o">:</span><span class="mi">1010</span><span class="o">},</span><span class="s">"extensions"</span><span class="o">:{</span><span class="s">"tracing"</span><span class="o">:{</span><span class="s">"version"</span><span class="o">:</span><span class="mi">1</span><span class="o">,</span><span class="s">"startTime"</span><span class="o">:</span><span class="s">"2018-01-06T12:14:39.764Z"</span><span class="o">,</span><span class="s">"endTime"</span><span class="o">:</span><span class="s">"2018-01-06T12:14:49.731Z"</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">9978962056</span><span class="o">,</span><span class="s">"parsing"</span><span class="o">:{</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">27126149</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">10353775</span><span class="o">},</span><span class="s">"validation"</span><span class="o">:{</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">56870281</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">28084143</span><span class="o">},</span><span class="s">"execution"</span><span class="o">:{</span><span class="s">"resolvers"</span><span class="o">:[{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"total"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Query"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"Int"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"total"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">5651396258</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">80592</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"offset"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Query"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"Int"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"offset"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">5654907323</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">290279</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Query"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">5640733240</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">1099040620</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">6756011623</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">1500992</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">6757782837</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">76216</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"my_name"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"my_name"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">6758077127</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">1296410</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"person"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"Person"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"person"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">6759695543</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">75122</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"person"</span><span class="o">,</span><span class="s">"name"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Person"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"name"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">6759985093</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">68923</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">6760451873</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">3042131320</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9808188936</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">130552</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9808540115</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">76581</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9808802315</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">188535</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9809279671</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">56524</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9809511967</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">47043</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9810061893</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">92991</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9814951784</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">156809</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9815470348</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">72934</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9816725185</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">627966</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9819106860</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">222814</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9819789162</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">71475</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9820038597</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">109402</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9821130062</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">101743</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9821394084</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">47043</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9821611794</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">77675</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9823231668</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">357744</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9824039053</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">116330</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9824609400</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">84604</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9824909525</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">98462</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9825267269</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">67829</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9826787952</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">91168</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9831843040</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">143316</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9832200419</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">66735</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9832735028</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">630154</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9833677706</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">63453</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9833886663</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">264388</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9834603974</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">54701</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9834968646</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">54336</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9835346082</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">47043</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9835549934</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">47407</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9835967119</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">816866</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9837155950</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">66735</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9837411586</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">78040</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9837758389</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">3663498</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9841666947</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">476626</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9842329556</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">75487</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9842690217</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">62724</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9843400234</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">170302</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9844302798</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">67464</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9844866217</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">150245</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9846153875</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">117789</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9846488644</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">42667</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9846870456</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">39384</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9847053886</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">35738</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9847243516</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">68558</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9847528689</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">38656</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9847685498</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">30633</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9847936393</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">106484</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9848816712</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">53607</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9849164245</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">49960</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9849335276</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">34279</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9850513167</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">49231</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9850688210</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">48501</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9850880392</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">81687</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9851231207</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">136388</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9852709224</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">66370</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9853526455</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">75851</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9853759115</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">44855</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9854280232</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">65641</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9865397267</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">80228</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9866131353</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">53971</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9866304937</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">37196</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9866667421</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">727886</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9869150110</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">66735</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9869392617</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">39385</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9869612879</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">91533</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9870719659</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">63818</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9870908195</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">33185</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9878985322</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">114871</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9897527814</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">103932</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9897913637</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">41573</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9898777181</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">55431</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9899199837</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">55794</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9899377797</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">34643</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9899598059</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">88980</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9899884326</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">38291</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9900031654</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">32821</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9900275984</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">39385</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9900421124</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">30633</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9900621694</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">40114</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9900751882</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">29538</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9900993660</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">31361</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9901143540</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">35373</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"[Patent]"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"citations"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9901285762</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">55795</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9901484144</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">31726</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9901599745</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">28809</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9901780622</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">31727</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9901928315</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">32091</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"id"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"id"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9902142013</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">32820</span><span class="o">},{</span><span class="s">"path"</span><span class="o">:[</span><span class="s">"patent"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"citations"</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="s">"pn"</span><span class="o">],</span><span class="s">"parentType"</span><span class="o">:</span><span class="s">"Patent"</span><span class="o">,</span><span class="s">"returnType"</span><span class="o">:</span><span class="s">"String!"</span><span class="o">,</span><span class="s">"fieldName"</span><span class="o">:</span><span class="s">"pn"</span><span class="o">,</span><span class="s">"startOffset"</span><span class="o">:</span><span class="mi">9902261625</span><span class="o">,</span><span class="s">"duration"</span><span class="o">:</span><span class="mi">31727</span><span class="o">}]}}}}</span>
<span class="nc">Total</span> <span class="nl">Cost:</span> <span class="mi">11627</span> <span class="n">ms</span>
</code></pre></div></div>
<p>May be you can‚Äôt catch the point of why we need to do this, but once if we compare the time cost between this example result and the normal way to get the result, then we could find a huge different
So let‚Äôs change the datafetcher into the normal way</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Patent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.core.JsonProcessingException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.fasterxml.jackson.databind.ObjectMapper</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.dataloader.BatchLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dataloader.DataLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dataloader.DataLoaderRegistry</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.CompletableFuture</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.DataFetcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.RuntimeWiring</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaGenerator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeDefinitionRegistry</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/21/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SingleTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">DataFetcher</span> <span class="n">patentDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="n">getPatentByPatentIds</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(((</span><span class="nc">String</span><span class="o">)</span><span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">)))).</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>

        <span class="nc">DataFetcher</span> <span class="n">patentCitationDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getSource</span><span class="o">()!=</span><span class="kc">null</span><span class="o">){</span>
                <span class="nc">Patent</span> <span class="n">patent</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getSource</span><span class="o">();</span>
                <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">patentIds</span> <span class="o">=</span> <span class="n">getPatentCitationIds</span><span class="o">(</span><span class="n">patent</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
                <span class="k">return</span> <span class="nf">getPatentByPatentIds</span><span class="o">(</span><span class="n">patentIds</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">EMPTY_LIST</span><span class="o">;</span>
        <span class="o">};</span>

        <span class="nc">Long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="c1">// Define the schema</span>
        <span class="nc">File</span> <span class="n">schemaFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">DataLoader</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"dataloader.graphqls"</span><span class="o">).</span><span class="na">getPath</span><span class="o">());</span>

        <span class="c1">// Define the type definition registry</span>
        <span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">schemaFile</span><span class="o">);</span>



        <span class="c1">// Define the runtime wiring</span>
        <span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"patent"</span><span class="o">,</span> <span class="n">patentDataFetcher</span><span class="o">)</span>
                <span class="o">)</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Patent"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"citations"</span><span class="o">,</span> <span class="n">patentCitationDataFetcher</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the graphQL schema</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">().</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>

        <span class="c1">// Define the graphQL</span>
        <span class="nc">GraphQL</span> <span class="n">graphQL</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the execution</span>
        <span class="nc">String</span> <span class="n">queryString</span> <span class="o">=</span> <span class="s">"query Query($patentId: String!){patent(patentId: $patentId) {id pn citations{id pn citations{id pn citations{id pn}}}}}"</span><span class="o">;</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">,</span> <span class="s">"1"</span><span class="o">);</span>
        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">graphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">specificationResult</span> <span class="o">=</span> <span class="n">executionResult</span><span class="o">.</span><span class="na">toSpecification</span><span class="o">();</span>

        <span class="nc">ObjectMapper</span> <span class="n">objectMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">objectMapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">specificationResult</span><span class="o">));</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonProcessingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="nc">Long</span> <span class="n">endTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Total Cost: "</span><span class="o">+(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)+</span><span class="s">" ms"</span><span class="o">);</span>
    <span class="o">}</span>



    <span class="kd">static</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">patentCitationIdMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">();</span>
    <span class="kd">static</span><span class="o">{</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"2"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"1"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"3"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"4"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">}));</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getPatentCitationIds</span><span class="o">(</span><span class="nc">String</span> <span class="n">patentId</span><span class="o">){</span>
        <span class="k">return</span> <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">patentId</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">getPatentByPatentIds</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">patentIds</span><span class="o">){</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentCitations</span>  <span class="o">=</span> <span class="n">patentIds</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">id</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="nc">Patent</span> <span class="n">patent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Patent</span><span class="o">();</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setPn</span><span class="o">(</span><span class="s">"AAA"</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">patent</span><span class="o">;</span>
        <span class="o">}).</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
        <span class="k">return</span> <span class="n">patentCitations</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>then the total time cost could increase to nearly 5 seconds.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span><span class="s">"data"</span><span class="o">:{</span><span class="s">"patent"</span><span class="o">:{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"1"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">,</span><span class="s">"citations"</span><span class="o">:[{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"2"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">},{</span><span class="s">"id"</span><span class="o">:</span><span class="s">"4"</span><span class="o">,</span><span class="s">"pn"</span><span class="o">:</span><span class="s">"AAA"</span><span class="o">}]}]}]}}}</span>
<span class="nc">Total</span> <span class="nl">Cost:</span> <span class="mi">49478</span> <span class="n">ms</span>
</code></pre></div></div>

<h2 id="using-annotation-to-define-the-schema">Using annotation to define the schema</h2>
<p>Imagine that we need to define a large graphql schema which so many types need to be included. So we also need to add a lot of beans map to the schema, so may be we can put these two together. Let‚Äôs use <code class="language-plaintext highlighter-rouge">graphql-java-annotation</code> to make this happen.</p>

<p>Maven dependency</p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>graphql-java-annotations<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>3.0.3<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>
<p>Value Object</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.entity</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.datafetcher.TeamNameDataFetcher</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.annotations.GraphQLDataFetcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.annotations.GraphQLField</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.annotations.GraphQLName</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/22/2017.
 */</span>
<span class="nd">@GraphQLName</span><span class="o">(</span><span class="s">"team"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Team</span> <span class="o">{</span>
    <span class="nd">@GraphQLName</span><span class="o">(</span><span class="s">"team_name"</span><span class="o">)</span>
    <span class="nd">@GraphQLField</span>
    <span class="nd">@GraphQLDataFetcher</span><span class="o">(</span><span class="nc">TeamNameDataFetcher</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
    <span class="kd">public</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="nd">@GraphQLName</span><span class="o">(</span><span class="s">"team_total_members"</span><span class="o">)</span>
    <span class="nd">@GraphQLField</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="n">total</span><span class="o">;</span>
<span class="o">}</span>

</code></pre></div></div>

<p>Test class</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Team</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.annotations.GraphQLAnnotations</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLObjectType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/22/2017.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AnnotationTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//  Programmatically</span>
        <span class="nc">GraphQLObjectType</span> <span class="n">queryType</span> <span class="o">=</span> <span class="nc">GraphQLAnnotations</span><span class="o">.</span><span class="na">object</span><span class="o">(</span><span class="nc">Team</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

        <span class="c1">//Query by</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="nc">GraphQLSchema</span><span class="o">.</span><span class="na">newSchema</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryType</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">GraphQL</span> <span class="n">build</span> <span class="o">=</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"team"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="s">"query team{team_name}"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">context</span><span class="o">(</span><span class="k">new</span> <span class="nc">Team</span><span class="o">())</span>
                <span class="o">.</span><span class="na">root</span><span class="o">(</span><span class="k">new</span> <span class="nc">Team</span><span class="o">())</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">build</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>

        <span class="c1">//ExecutionResult executionResult = build.execute("query team{team_name}", new Team());</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">executionResult</span><span class="o">.</span><span class="na">getData</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>
<p>All these example are on Github, please check <a href="https://github.com/ye8303019/project-graphql-java-demo/tree/master">https://github.com/ye8303019/project-graphql-java-demo/tree/master</a> to get the complete source code.</p>

<p>OK, that‚Äôs all the regular test for GraphQL, next step, let‚Äôs integrate GraphQL with Spring.
Imagine that we want to provide the GraphQL service vai HTTP/HTTPS. and also we may think if we could find some useful starter to help us make the code more elegant.</p>
<h3 id="integration-with-spring-boot">Integration with spring boot</h3>
<p>In this example, let‚Äôs using the <code class="language-plaintext highlighter-rouge">spring-boot-starter</code> &amp; <code class="language-plaintext highlighter-rouge">spring-boot-starter-web</code> to build a microservice.</p>

<p>pom.xml</p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span>
         <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
         <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>com.chris.graphql<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>project-graphql<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
    <span class="nt">&lt;version&gt;</span>1.0-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;name&gt;</span>project-graphql Maven Webapp<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;url&gt;</span>http://maven.apache.org<span class="nt">&lt;/url&gt;</span>
    <span class="nt">&lt;parent&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/parent&gt;</span>
    <span class="nt">&lt;properties&gt;</span>
        <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
        <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
        <span class="nt">&lt;spring.boot.version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/spring.boot.version&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>
    <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.8.1<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphql-java<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>6.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.github.ben-manes.caffeine<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>caffeine<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.6.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-databind<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-core<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-annotations<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>javax.servlet-api<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.1.0<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>compile<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>
    <span class="nt">&lt;build&gt;</span>
        <span class="nt">&lt;finalName&gt;</span>project-graphql<span class="nt">&lt;/finalName&gt;</span>
        <span class="nt">&lt;plugins&gt;</span>
            <span class="nt">&lt;plugin&gt;</span>
                <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
                <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
                <span class="nt">&lt;version&gt;</span>3.5<span class="nt">&lt;/version&gt;</span>
                <span class="nt">&lt;configuration&gt;</span>
                    <span class="nt">&lt;source&gt;</span>${java.version}<span class="nt">&lt;/source&gt;</span>
                    <span class="nt">&lt;target&gt;</span>${java.version}<span class="nt">&lt;/target&gt;</span>
                    <span class="nt">&lt;encoding&gt;</span>${project.build.sourceEncoding}<span class="nt">&lt;/encoding&gt;</span>
                    <span class="nt">&lt;optimize&gt;</span>true<span class="nt">&lt;/optimize&gt;</span>
                    <span class="nt">&lt;showWarnings&gt;</span>true<span class="nt">&lt;/showWarnings&gt;</span>
                <span class="nt">&lt;/configuration&gt;</span>
            <span class="nt">&lt;/plugin&gt;</span>
        <span class="nt">&lt;/plugins&gt;</span>

        <span class="nt">&lt;resources&gt;</span>
            <span class="nt">&lt;resource&gt;</span>
                <span class="nt">&lt;directory&gt;</span>src/main/resources<span class="nt">&lt;/directory&gt;</span>
                <span class="nt">&lt;includes&gt;</span>
                    <span class="nt">&lt;include&gt;</span>**/*<span class="nt">&lt;/include&gt;</span>
                <span class="nt">&lt;/includes&gt;</span>
                <span class="nt">&lt;filtering&gt;</span>false<span class="nt">&lt;/filtering&gt;</span>
            <span class="nt">&lt;/resource&gt;</span>
        <span class="nt">&lt;/resources&gt;</span>

    <span class="nt">&lt;/build&gt;</span>
<span class="nt">&lt;/project&gt;</span>

</code></pre></div></div>
<p>graphql file</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
    <span class="nx">patent</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="nx">offset</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">limit</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">10</span><span class="p">):</span> <span class="nx">Patent</span>
    <span class="nx">total</span><span class="p">(</span><span class="nx">patentId</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span> <span class="nx">Int</span>
    <span class="nx">offset</span><span class="p">(</span><span class="nx">offset</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">limit</span><span class="p">:</span> <span class="nx">Int</span> <span class="o">=</span> <span class="mi">10</span><span class="p">):</span> <span class="nx">Int</span>


<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Patent</span> <span class="p">{</span>
    <span class="nl">id</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">pn</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
    <span class="nx">my_name</span><span class="p">:</span> <span class="nb">String</span>
    <span class="nx">apno</span><span class="p">:</span> <span class="nb">String</span>
    <span class="nx">citations</span><span class="p">:</span> <span class="p">[</span><span class="nx">Patent</span><span class="p">]</span>
    <span class="nx">person</span><span class="p">:</span> <span class="nx">Person</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="nl">name</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre></div></div>
<p>GraphQL Bean</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.dataloader</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.Patent</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.dataloader.BatchLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dataloader.DataLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dataloader.DataLoaderRegistry</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.CompletableFuture</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.DataFetcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.GraphQLSchema</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.RuntimeWiring</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaGenerator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.SchemaParser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.schema.idl.TypeDefinitionRegistry</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 12/21/2017.
 */</span>
<span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CitationDataLoader</span> <span class="o">{</span>

    <span class="nd">@Bean</span><span class="o">(</span><span class="s">"CitationGraphQL"</span><span class="o">)</span>
    <span class="kd">protected</span> <span class="nc">GraphQL</span> <span class="nf">getGraphQL</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">BatchLoader</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentBatchLoader</span> <span class="o">=</span> <span class="n">keys</span> <span class="o">-&gt;</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">getPatentByPatentIds</span><span class="o">(</span><span class="n">keys</span><span class="o">));</span>

        <span class="nc">DataLoader</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentDataLoader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataLoader</span><span class="o">(</span><span class="n">patentBatchLoader</span><span class="o">);</span>

        <span class="nc">DataFetcher</span> <span class="n">patentDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="n">patentDataLoader</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getArgument</span><span class="o">(</span><span class="s">"patentId"</span><span class="o">));</span>

        <span class="nc">DataFetcher</span> <span class="n">patentCitationDataFetcher</span> <span class="o">=</span> <span class="n">env</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">Patent</span> <span class="n">patent</span> <span class="o">=</span> <span class="n">env</span><span class="o">.</span><span class="na">getSource</span><span class="o">();</span>
                <span class="k">return</span> <span class="n">patentDataLoader</span><span class="o">.</span><span class="na">loadMany</span><span class="o">(</span><span class="n">getPatentCitationIds</span><span class="o">(</span><span class="n">patent</span><span class="o">.</span><span class="na">getId</span><span class="o">()));</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">EMPTY_LIST</span><span class="o">;</span>
        <span class="o">};</span>

        <span class="nc">Long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="c1">// Define the schema</span>
        <span class="nc">File</span> <span class="n">schemaFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="nc">DataLoader</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"dataloader.graphqls"</span><span class="o">).</span><span class="na">getPath</span><span class="o">());</span>

        <span class="c1">// Define the type definition registry</span>
        <span class="nc">TypeDefinitionRegistry</span> <span class="n">typeDefinitionRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaParser</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">schemaFile</span><span class="o">);</span>

        <span class="c1">// Define the runtime wiring</span>
        <span class="nc">RuntimeWiring</span> <span class="n">runtimeWiring</span> <span class="o">=</span> <span class="nc">RuntimeWiring</span><span class="o">.</span><span class="na">newRuntimeWiring</span><span class="o">()</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Query"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"patent"</span><span class="o">,</span> <span class="n">patentDataFetcher</span><span class="o">)</span>
                <span class="o">)</span>
                <span class="o">.</span><span class="na">type</span><span class="o">(</span><span class="s">"Patent"</span><span class="o">,</span> <span class="n">builder</span> <span class="o">-&gt;</span> <span class="n">builder</span>
                        <span class="o">.</span><span class="na">dataFetcher</span><span class="o">(</span><span class="s">"citations"</span><span class="o">,</span> <span class="n">patentCitationDataFetcher</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// Define the graphQL schema</span>
        <span class="nc">GraphQLSchema</span> <span class="n">graphQLSchema</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SchemaGenerator</span><span class="o">().</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="n">typeDefinitionRegistry</span><span class="o">,</span> <span class="n">runtimeWiring</span><span class="o">);</span>

        <span class="c1">// Define data loader registry</span>
        <span class="nc">DataLoaderRegistry</span> <span class="n">registry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataLoaderRegistry</span><span class="o">();</span>
        <span class="n">registry</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="s">"patent"</span><span class="o">,</span> <span class="n">patentDataLoader</span><span class="o">);</span>

        <span class="c1">// Define the graphQL</span>
        <span class="k">return</span> <span class="nc">GraphQL</span><span class="o">.</span><span class="na">newGraphQL</span><span class="o">(</span><span class="n">graphQLSchema</span><span class="o">)</span>
                <span class="o">.</span><span class="na">instrumentation</span><span class="o">(</span><span class="k">new</span> <span class="nc">DataLoaderDispatcherInstrumentation</span><span class="o">(</span><span class="n">registry</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">patentCitationIdMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">();</span>

    <span class="kd">static</span> <span class="o">{</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"2"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"3"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}));</span>
        <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"4"</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">}));</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getPatentCitationIds</span><span class="o">(</span><span class="nc">String</span> <span class="n">patentId</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">patentCitationIdMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">patentId</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">getPatentByPatentIds</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">patentIds</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">patentCitations</span> <span class="o">=</span> <span class="n">patentIds</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">id</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="nc">Patent</span> <span class="n">patent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Patent</span><span class="o">();</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
            <span class="n">patent</span><span class="o">.</span><span class="na">setPn</span><span class="o">(</span><span class="s">"AAA"</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">patent</span><span class="o">;</span>
        <span class="o">}).</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
        <span class="k">return</span> <span class="n">patentCitations</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>
<p>Controller</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.chris.graphql.controller</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.chris.graphql.entity.QueryBean</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestBody</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMethod</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">graphql.ExecutionInput</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.ExecutionResult</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">graphql.GraphQL</span><span class="o">;</span>

<span class="cm">/**
 * Created by ye830 on 9/11/2017.
 */</span>

<span class="nd">@RestController</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/patent"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PatentController</span> <span class="o">{</span>

    <span class="nd">@Autowired</span>
    <span class="nc">GraphQL</span> <span class="n">citationGraphQL</span><span class="o">;</span>

    <span class="nd">@RequestMapping</span><span class="o">(</span>
            <span class="n">value</span> <span class="o">=</span> <span class="s">"/citation"</span><span class="o">,</span>
            <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">,</span>
            <span class="n">produces</span> <span class="o">=</span> <span class="s">"application/json"</span>
    <span class="o">)</span>
    <span class="kd">public</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">citation</span><span class="o">(</span><span class="nd">@RequestBody</span> <span class="nc">QueryBean</span> <span class="n">queryBean</span><span class="o">){</span>
        <span class="nc">Long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>
        <span class="c1">// Define the execution</span>
        <span class="nc">String</span> <span class="n">queryString</span> <span class="o">=</span> <span class="n">queryBean</span><span class="o">.</span><span class="na">getQuery</span><span class="o">();</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">variableMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">queryBean</span><span class="o">.</span><span class="na">getVariable</span><span class="o">().</span><span class="na">entrySet</span><span class="o">()){</span>
            <span class="n">variableMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="nc">ExecutionInput</span> <span class="n">executionInput</span> <span class="o">=</span> <span class="nc">ExecutionInput</span><span class="o">.</span><span class="na">newExecutionInput</span><span class="o">()</span>
                <span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">queryString</span><span class="o">)</span>
                <span class="o">.</span><span class="na">operationName</span><span class="o">(</span><span class="s">"Query"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">variables</span><span class="o">(</span><span class="n">variableMap</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="nc">ExecutionResult</span> <span class="n">executionResult</span> <span class="o">=</span> <span class="n">citationGraphQL</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">executionInput</span><span class="o">);</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">specificationResult</span> <span class="o">=</span> <span class="n">executionResult</span><span class="o">.</span><span class="na">toSpecification</span><span class="o">();</span>

        <span class="nc">Long</span> <span class="n">endTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">().</span><span class="na">getTime</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Total Cost: "</span><span class="o">+(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)+</span><span class="s">" ms"</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">specificationResult</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>
<p>So we could get the result by send post request to the server</p>

<p><img src="http://localhost:4000/images/graphql/GraphQL_RESTFUL.png" alt="GraphQL_RESTFUL" /></p>

<h3 id="integration-with-graphql-spring-boot-starter--graphiql-spring-starter">Integration with GraphQL spring boot starter &amp; GraphiQL Spring starter</h3>
<p>Spring hava provide us a very useful starter for GraphQL, we just need to add the <code class="language-plaintext highlighter-rouge">graphql-spring-boot-starter</code>, <code class="language-plaintext highlighter-rouge">graphiql-spring-boot-starter</code>, <code class="language-plaintext highlighter-rouge">graphql-java-tools</code> dependency and write the bean and add some configurations then every thing will set up by spring</p>

<p>pom.xml</p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span>
         <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
         <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

    <span class="nt">&lt;groupId&gt;</span>com.chris.graphql<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>project-graphql-spring<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>1.0-SNAPSHOT<span class="nt">&lt;/version&gt;</span>

    <span class="nt">&lt;parent&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/parent&gt;</span>

    <span class="nt">&lt;properties&gt;</span>
        <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
        <span class="nt">&lt;spring.boot.version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/spring.boot.version&gt;</span>
        <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>

    <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.8.1<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphql-java<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>6.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphql-java-annotations<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.0.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.github.ben-manes.caffeine<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>caffeine<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.6.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-databind<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-core<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jackson-annotations<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.9.3<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.4.4.RELEASE<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>javax.servlet-api<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.1.0<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>compile<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphql-spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.9.2<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphiql-spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>3.9.2<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.graphql-java<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>graphql-java-tools<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>4.3.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

    <span class="nt">&lt;build&gt;</span>
        <span class="nt">&lt;plugins&gt;</span>
            <span class="nt">&lt;plugin&gt;</span>
                <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
                <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
                <span class="nt">&lt;version&gt;</span>3.5<span class="nt">&lt;/version&gt;</span>
                <span class="nt">&lt;configuration&gt;</span>
                    <span class="nt">&lt;source&gt;</span>${java.version}<span class="nt">&lt;/source&gt;</span>
                    <span class="nt">&lt;target&gt;</span>${java.version}<span class="nt">&lt;/target&gt;</span>
                    <span class="nt">&lt;encoding&gt;</span>${project.build.sourceEncoding}<span class="nt">&lt;/encoding&gt;</span>
                    <span class="nt">&lt;optimize&gt;</span>true<span class="nt">&lt;/optimize&gt;</span>
                    <span class="nt">&lt;showWarnings&gt;</span>true<span class="nt">&lt;/showWarnings&gt;</span>
                <span class="nt">&lt;/configuration&gt;</span>
            <span class="nt">&lt;/plugin&gt;</span>
        <span class="nt">&lt;/plugins&gt;</span>
        <span class="nt">&lt;resources&gt;</span>
            <span class="nt">&lt;resource&gt;</span>
                <span class="nt">&lt;directory&gt;</span>src/main/resources<span class="nt">&lt;/directory&gt;</span>
                <span class="nt">&lt;includes&gt;</span>
                    <span class="nt">&lt;include&gt;</span>**/*<span class="nt">&lt;/include&gt;</span>
                <span class="nt">&lt;/includes&gt;</span>
                <span class="nt">&lt;filtering&gt;</span>false<span class="nt">&lt;/filtering&gt;</span>
            <span class="nt">&lt;/resource&gt;</span>
        <span class="nt">&lt;/resources&gt;</span>
    <span class="nt">&lt;/build&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>
<p>application.properties</p>
<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">graphql.servlet.corsEnabled</span><span class="p">=</span><span class="s">true</span>
<span class="py">graphql.servlet.mapping</span><span class="p">=</span><span class="s">/graphql</span>
<span class="py">graphql.servlet.enabled</span><span class="p">=</span><span class="s">true</span>

<span class="py">graphiql.enabled</span><span class="p">=</span><span class="s">true</span>
<span class="py">graphiql.endpoint</span><span class="p">=</span><span class="s">/graphql</span>
<span class="py">graphiql.mapping</span><span class="p">=</span><span class="s">/graphiql</span>
</code></pre></div></div>

<p>graphql files</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Query</span> <span class="p">{</span>
    <span class="err">#</span> <span class="nx">Get</span> <span class="nx">patent</span> <span class="nx">information</span> <span class="nx">by</span> <span class="nx">a</span> <span class="nx">patent</span> <span class="nx">id</span>
    <span class="nx">patent</span><span class="p">(</span><span class="nx">patent_id</span><span class="p">:</span> <span class="nb">String</span><span class="p">):</span><span class="nx">Patent</span>
<span class="p">}</span>

<span class="nx">type</span> <span class="nx">Patent</span> <span class="p">{</span>
    <span class="err">#</span> <span class="nx">Patent</span> <span class="nx">unique</span> <span class="nx">id</span>
    <span class="nx">id</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">Patent</span> <span class="nx">number</span>
    <span class="nx">pn</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">A</span> <span class="nx">list</span> <span class="k">of</span> <span class="nx">patent</span> <span class="nx">IPC</span> <span class="nx">code</span>
    <span class="nx">ipc</span><span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">]</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">Assignee</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">patent</span>
    <span class="nx">assignee</span><span class="p">:</span> <span class="nx">Assignee</span>
    <span class="err">#</span> <span class="nx">A</span> <span class="nx">list</span> <span class="k">of</span> <span class="nx">inventors</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">patent</span>
    <span class="nx">inventor</span><span class="p">:</span> <span class="p">[</span><span class="nx">Inventor</span><span class="p">]</span>
<span class="p">}</span>

<span class="kr">interface</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="err">#</span> <span class="nx">Person</span> <span class="nx">name</span>
    <span class="nx">name</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">Person</span> <span class="nx">age</span>
    <span class="nx">age</span><span class="p">:</span> <span class="nx">Int</span>
    <span class="err">#</span> <span class="nx">Person</span> <span class="nx">address</span>
    <span class="nx">address</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>

<span class="err">#</span> <span class="nx">The</span> <span class="nx">assignee</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">patent</span>
<span class="nx">type</span> <span class="nx">Assignee</span> <span class="kr">implements</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">name</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">assignee</span>
    <span class="nx">name</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">age</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">assignee</span>
    <span class="nx">age</span><span class="p">:</span> <span class="nx">Int</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">address</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">assignee</span>
    <span class="nx">address</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">normalized</span> <span class="nx">name</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">assignee</span>
    <span class="nx">nname</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>

<span class="err">#</span> <span class="nx">The</span> <span class="nx">inventor</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">patent</span>
<span class="nx">type</span> <span class="nx">Inventor</span> <span class="kr">implements</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">name</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">inventor</span>
    <span class="nx">name</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">age</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">inventor</span>
    <span class="nx">age</span><span class="p">:</span> <span class="nx">Int</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">address</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">inventor</span>
    <span class="nx">address</span><span class="p">:</span> <span class="nb">String</span>
    <span class="err">#</span> <span class="nx">The</span> <span class="nx">country</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">inventor</span>
    <span class="nx">country</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>


</code></pre></div></div>

<p>For the java codes please check my github repository
<a href="https://github.com/ye8303019/project-graphql-spring-demo/tree/master">project-graphql-spring-demo</a></p>

<p><em>Reference:</em><br />
<em>[1]:http://facebook.github.io/graphql/October2016/</em><br />
<em>[2]:http://graphql.org/</em>  <br />
<em>[3]:https://developer.github.com/v4/</em>  <br />
<em>[4]:https://githubengineering.com/the-github-graphql-api/</em>
<em>[5]:http://graphql.org/graphql-js/mutations-and-input-types/</em><br />
<em>[6]:http://www.baeldung.com/graphql</em>
_[7]:https://github.com/graphql-java/graphql-spring-boot
_[8]:https://github.com/graphql-java/graphql-java-tools
_[9]:https://github.com/graphql-java/graphql-java-servlet
_[10]:https://github.com/apottere/awesome-graphql-java
_[11]:https://github.com/apottere/awesome-graphql</p>

:ET